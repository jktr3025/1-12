@charset "utf-8";

@import url('https://fonts.googleapis.com/css2?family=Lemon&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* scss */
:root{
    /* 색 */
    --primary-color : #e53935;
    --shadow-color : #0e0e0e;
    --clock-color :#212121 ;
    /* 애니메이션 시간 */
    --s-animate-time : 10s;
    --m-animate-time : 60s;
    --h-animate-time : 20s;
    /* 실제시간  */
    --s-rotate-time:60s;
    --m-rotate-time:3600s;
    --h-rotate-time:432000;

    /* rotate from */
    --s-rotate-from:0deg;
    --m-rotate-from:0deg;
    --h-rotate-from:0deg;
    /* rotate to */
    --s-rotate-to:0deg;
    --m-rotate-to:0deg;
    --h-rotate-to:0deg;
}
/* 
css 안에서 또 스타일 가이드을 만들어줌
맨 위에서 :root{}안에 --이름 : ;로 이름정의하고 
밑에서 background-color: var(--primary-color);처럼 사용
 */




html{
    font-size: 10px;
}

body{
    background-color: var(--primary-color);
    min-height: 100vh;
    font-family: 'Lemon', serif;
    font-size: 1.4rem;
}
section{
    background-color: var(--clock-color);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10rem;
    position: relative;
}
.clock, .clock_top, .clock_center, .hours_pointer{
    border-radius: 50%;
    /* border: 1px whitesmoke solid; */
}
.clock{
    width: 45rem;
    height: 45rem;
    min-width: 45rem;
    min-height: 45rem;
    padding: 2rem;
    background-color: var(--clock-color);
    /* -webkit-box-shadow:1rem 0 2rem var(--shadow-color);
    -moz-box-shadow: 1rem 0 2rem var(--shadow-color); */
    box-shadow: 1rem 0 2rem var(--shadow-color);
    position: relative;
}
.clock_center{
    width: 100%;
    height: 100%;
    background-color: var(--primary-color);
    box-shadow: 1.5rem 0 1rem var(--shadow-color);
    display: grid;
    grid-template-rows: repeat(7, 1fr);
    grid-template-columns: repeat(7, 1fr);
    grid-template-areas: 
    ". . . n12 . . ."
    ". . n11 . n1 . ."
    ". n10 . . . n2 . "
    "n9 . . . . . n3"
    ". n8 . . . n4 . "
    ". . n7 . n5 . ."
    ". . . n6 . . ."    ;
    /* border: 1px solid white; */
    
}
.number{
    font-size: 3.2rem;
    color: var(--clock-color);
    line-height: 1;
    justify-content: center;
    align-items: center;
}
.number1{
    grid-area: n1;
    justify-self: end;
    align-self: start;
}
.number2{
    grid-area: n2;
    justify-self: end;
    align-self: start;
}
.number3{
    grid-area: n3;
    justify-self: start;
    align-self: end;

}
.number4{
    grid-area: n4;
    justify-self: end;
    align-self: end;
}
.number5{
    grid-area: n5;
    justify-self: end;
    align-self: end;
}
.number6{
    grid-area: n6;
    align-self: start;

}
.number7{
    grid-area: n7;
    justify-self: start;
    align-self: end;
}
.number8{
    grid-area: n8;
    justify-self: start;
    align-self: end;
}
.number9{
    grid-area: n9;
    justify-self: end;
}
.number10{
    grid-area: n10;
    justify-self: start;
    align-self: start;
}
.number11{
    grid-area: n11;
    justify-self: start;
    align-self: start;
}
.number12{
    grid-area: n12;
    align-self: end;
}
.clock_top, .hours_container, .hours_pointer{
    width: 100%;
    height: 100%;
}
.clock_top{
    position: absolute;
    left: 0;
    top: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}
.hours_container{
    position: relative;
    z-index: 1;
    filter: drop-shadow(1.2rem 0 0.5rem var(--shadow-color));
}
.hours_pointer{
    background-color: var(--clock-color);
    /* clip-path: polygon(73% 0, 100% 0, 100% 35%, 100% 70%, 100% 100%, 50% 100%, 0 100%, 0 0, 32% 0, 49% 44%); */
    clip-path: polygon(65% 0, 100% 0, 100% 35%, 100% 70%, 100% 100%, 50% 100%, 0 100%, 0 0, 32% 0, 49% 44%);

}
.sec_min_container{
    height: 3rem;
    width: 2rem;
    background-color: var(--clock-color);
    box-shadow: 0 0.1rem 1rem var(--shadow-color);
    border-radius: 50%;
    position: absolute;
    z-index: 2;
}
.min_container, .sec_container{
    height: 100%;
    width: 100%;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
}
.sec_container{
    position: absolute;
    bottom: -10rem;
    width: 0.2rem;
    height: 22rem;
    background-color: var(--primary-color);
    box-shadow: 0 0 1rem var(--shadow-color);
    border-radius: 0.1rem;
    z-index: 0;
}
.sec_container::before{
    content: "";
    position: absolute;
    height: 0.4rem;
    width: 0.4rem;
    background-color: var(--clock-color);
    border-radius: 50%;
    z-index: 2;
}
.sec_container::after{
    content: "";
    position: absolute;
    height: 1.2rem;
    width: 1.2rem;
    background-color: white;
    border-radius: 50%;
    border: 0.2rem solid var(--primary-color);
    z-index: 1;
}
.min_container{
}
.min_pointer{
    position: absolute;
    height: 14rem;
    width: 0.2rem;
    background-color: #fff;
    border-radius: 0.15rem;
    z-index: 0;
    box-shadow: 0.5rem 0.1rem 0.8rem var(--shadow-color);
    bottom: -1.5rem;
}

/* animation */
.animation .sec_container{
    animation: animate_seconds var(--s-animate-time) infinite linear;
}
@keyframes animate_seconds{
    0%{
        transform: rotateZ(0deg);
    }
    90%{
        transform: rotateZ(360deg);

    }
    100%{
        transform: rotateZ(0deg);
    }
}

.animation .min_container{
    animation: animation_minutes var(--m-animate-time) infinite linear;
}
.animation .hours_container{
    animation: animation_minutes var(--h-animate-time) infinite linear;
    
}
@keyframes animation_minutes{
    to{
        transform: rotateZ(360deg);
    }
}

/* working animation */
.working .sec_container{
    transform: rotateZ(var(--s-rotate-from));
    animation: rotate_seconds var(--s-rotate-time) infinite linear ;
}
.working .min_container{
    transform: rotateZ(var(--m-rotate-from));
    animation: rotate_minutes var(--m-rotate-time) infinite linear ;
}

.working .hours_container{
    transform: rotateZ(var(--h-rotate-from));
    animation: rotate_hours var(--h-rotate-time) infinite linear ;
}

@keyframes rotate_seconds{
    from{
        transform: rotateZ(var(--s-rotate-from));
    }
    to{
        transform: rotateZ(var(--s-rotate-to));
    }
}

@keyframes rotate_minutes{
    from{
        transform: rotateZ(var(--m-rotate-from));
    }
    to{
        transform: rotateZ(var(--m-rotate-to));
    }
}

@keyframes rotate_hours{
    from{
        transform: rotateZ(var(--h-rotate-from));
    }
    to{
        transform: rotateZ(var(--h-rotate-to));
    }
}